version: '3.8'

services:
  postgresql:
    container_name: pg
    image: postgres:alpine
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      - POSTGRES_USER=${DB_UNAME}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAMEDB}
      - PG_DATA:/data/postgres
  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    environment:
      - ZOOKEEPER_CLIENT_PORT=${ZOOKEEPER_PORT}
    ports:
      - "${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}"

  kafka:
    image: 'confluentinc/cp-kafka:latest'
    depends_on:
      - zookeeper
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:${ZOOKEEPER_PORT}
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${KAFKA_BROKER}
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CREATE_TOPICS=${KAFKA_FIO_TOPIC}:1:1
      - KAFKA_CREATE_TOPICS=${KAFKA_FIO_FAILED_TOPIC}:1:1
    ports:
      - "${KAFKA_PORT}:${KAFKA_PORT}"
  redis:
    image: 'redis:latest'
    command: [ "redis-server", "--appendonly", "yes" ]
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"